{"version":3,"file":"static/js/3.23466796.chunk.js","mappings":"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","sources":["components/GetTrending.jsx","components/TrendingList/TrendingList.styled.jsx","components/TrendingItem/TrendingItem.styled.jsx","components/TrendingItem/TrendingItem.jsx","components/TrendingList/TrendingList.jsx","components/MovieForm/MovieForm.styled.jsx","components/MovieForm/MovieForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst PATH = 'https://api.themoviedb.org'\nconst KEY = 'f496025f6cb0adfa3f9f05b6edf25d52'\n\nexport const GetTranding = async () => {\n    try {\n        const response = await axios.get(`${PATH}/3/trending/movie/day?api_key=${KEY}`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`${PATH}/3/search/movie?api_key=${KEY}&language=en-US&page=1&query=${query}`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetMovieByID = async (id) => {\n    try {\n        const response = await axios.get(`${PATH}/3/movie/${id}?api_key=${KEY}&language=en-US`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetCastByID = async (id) => {\n    try {\n        const response = await axios.get(`${PATH}/3/movie/${id}/credits?api_key=${KEY}&language=en-US`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetReviewsByID = async (id) => {\n    try {\n        const response = await axios.get(`${PATH}/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n\n","import styled from '@emotion/styled'\n\nexport const List = styled('ul')`\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    margin: 0;\n`","import styled from '@emotion/styled'\nimport { NavLink } from \"react-router-dom\";\n\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  \n  &:hover{\n      color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const Item = styled.li`\n    margin-bottom: 20px;\n`","import PropTypes from 'prop-types';\nimport { Item, Link } from './TrendingItem.styled'\n\nconst TrendingItem = ({ renderList, location }) => {\n\n    return renderList.map(({ id, title, name }) => {\n        return (<Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>{title ? title : name}</Link>\n        </Item>\n        )\n    })\n\n}\n\nTrendingItem.propTypes = {\n    renderList: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n    location: PropTypes.shape().isRequired,\n}\n\nexport default TrendingItem;","import PropTypes from 'prop-types';\nimport { List } from './TrendingList.styled'\nimport TrendingItem from \"components/TrendingItem/TrendingItem\";\n\nconst TrendingList = ({ renderList, location }) => {\n    return (\n\n        <List>\n            <TrendingItem renderList={renderList} location={location} />\n        </List>\n    )\n}\n\nTrendingList.propTypes = {\n    renderList: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n    location: PropTypes.shape().isRequired,\n}\n\nexport default TrendingList;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n\n    margin-bottom: 10px;\n`\n\nexport const Input = styled.input`\n    padding: 5px;;\n`\n\nexport const Submit = styled.button`\n    margin-left: 10px;\n    padding: 5px 7px;\n`","import PropTypes from 'prop-types';\nimport { Form, Input, Submit } from \"./MovieForm.styled\"\n\nconst MovieForm = ({ submit, change, inputValue }) => {\n    return (\n        <Form onSubmit={submit}>\n            <Input onChange={change} value={inputValue} name='query' type=\"text\" />\n            <Submit type=\"submit\">Search</Submit>\n        </Form>\n    )\n}\n\nMovieForm.propTypes = {\n    submit: PropTypes.func.isRequired,\n    change: PropTypes.func.isRequired,\n    inputValue: PropTypes.string.isRequired,\n}\n\nexport default MovieForm","import { useState, useEffect } from \"react\"\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { GetSearchMovies } from \"components/GetTrending\"\nimport TrendingList from \"components/TrendingList/TrendingList\"\nimport MovieForm from \"components/MovieForm/MovieForm\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    const query = searchParams.get('query') ?? \"\"\n\n    const location = useLocation()\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n\n        if (query === null) {\n            return\n        }\n\n        GetSearchMovies(query).then(response => setMovies(response.data.results))\n    }\n\n    const handleChange = (evt) => {\n        if (evt.target.value === \"\") {\n            return setSearchParams({})\n        }\n\n        setSearchParams({ query: evt.target.value.toLowerCase() });\n    }\n\n    useEffect(() => {\n        GetSearchMovies(query).then(response => setMovies(response.data.results))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <>\n            <MovieForm submit={handleSubmit} change={handleChange} inputValue={query} />\n\n            <TrendingList renderList={movies} location={location} />\n        </>\n    )\n}\n\nexport default Movies"],"names":["PATH","KEY","GetTranding","axios","response","console","error","GetSearchMovies","query","GetMovieByID","id","GetCastByID","GetReviewsByID","List","styled","Link","NavLink","Item","renderList","location","map","title","name","to","state","from","Form","Input","Submit","submit","change","inputValue","onSubmit","onChange","value","type","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useLocation","useEffect","then","data","results","evt","preventDefault","target","toLowerCase","TrendingList"],"sourceRoot":""}