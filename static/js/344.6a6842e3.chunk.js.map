{"version":3,"file":"static/js/344.6a6842e3.chunk.js","mappings":"+SAEMA,EAAO,6BACPC,EAAM,mCAECC,EAAW,mCAAG,6GAEIC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,yCAAkDC,IAFtD,cAEbG,EAFa,yBAIZA,GAJY,gCAMnBC,QAAQC,MAAR,MANmB,yDAAH,qDAUXC,EAAe,mCAAG,WAAOC,GAAP,gGAEAL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mCAA4CC,EAA5C,wCAA+EO,IAF/E,cAEjBJ,EAFiB,yBAIhBA,GAJgB,gCAMvBC,QAAQC,MAAR,MANuB,yDAAH,sDAUfG,EAAY,mCAAG,WAAOC,GAAP,gGAEGP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oBAA6BU,EAA7B,oBAA2CT,EAA3C,oBAFH,cAEdG,EAFc,yBAIbA,GAJa,gCAMpBC,QAAQC,MAAR,MANoB,yDAAH,sDAUZK,EAAW,mCAAG,WAAOD,GAAP,gGAEIP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oBAA6BU,EAA7B,4BAAmDT,EAAnD,oBAFJ,cAEbG,EAFa,yBAIZA,GAJY,gCAMnBC,QAAQC,MAAR,MANmB,yDAAH,sDAUXM,EAAc,mCAAG,WAAOF,GAAP,gGAECP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oBAA6BU,EAA7B,4BAAmDT,EAAnD,2BAFD,cAEhBG,EAFgB,yBAIfA,GAJe,gCAMtBC,QAAQC,MAAR,MANsB,yDAAH,qD,sHC3CdO,E,OAASC,EAAAA,EAAH,6C,SCQnB,EARoB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3B,OACI,2BACI,SAACH,EAAD,UAASE,KACT,uBAAIC,MAGf,ECED,EAToB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACnB,OACI,wBACKA,EAAYC,KAAI,gBAAGR,EAAH,EAAGA,GAAIK,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACb,SAAC,EAAD,CAAsBD,OAAQA,EAAQC,QAASA,GAA7BN,EADL,KAK5B,ECOD,EAZgB,WACZ,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNZ,EAAAA,EAAAA,IAAeU,GAAUG,MAAK,SAAArB,GAAQ,OAAIiB,EAAUjB,EAASsB,KAAKC,QAA5B,GACzC,GAAE,CAACL,IAGkB,IAAlBF,EAAOQ,QAAe,SAAC,EAAD,CAAaX,YAAaG,KAAa,mEAEpE,C","sources":["components/GetTrending.jsx","components/ReviewsItem/ReviewsItem.styled.js","components/ReviewsItem/ReviewsItem.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst PATH = 'https://api.themoviedb.org'\nconst KEY = 'f496025f6cb0adfa3f9f05b6edf25d52'\n\nexport const GetTranding = async () => {\n    try {\n        const response = await axios.get(`${PATH}/3/trending/movie/day?api_key=${KEY}`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`${PATH}/3/search/movie?api_key=${KEY}&language=en-US&page=1&query=${query}`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetMovieByID = async (id) => {\n    try {\n        const response = await axios.get(`${PATH}/3/movie/${id}?api_key=${KEY}&language=en-US`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetCastByID = async (id) => {\n    try {\n        const response = await axios.get(`${PATH}/3/movie/${id}/credits?api_key=${KEY}&language=en-US`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const GetReviewsByID = async (id) => {\n    try {\n        const response = await axios.get(`${PATH}/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n        // console.log(response);\n        return response\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n\n","import styled from '@emotion/styled';\n\nexport const Author = styled.p`\n  font-weight: 700;\n`;\n","import { Author } from \"./ReviewsItem.styled\";\n\nconst ReviewsItem = ({ author, content }) => {\n    return (\n        <li>\n            <Author>{author}</Author>\n            <p>{content}</p>\n        </li>\n    )\n}\nexport default ReviewsItem;","import ReviewsItem from 'components/ReviewsItem/ReviewsItem';\n\nconst ReviewsList = ({ reviewsList }) => {\n    return (\n        <ol>\n            {reviewsList.map(({ id, author, content }) => (\n                <ReviewsItem key={id} author={author} content={content} />\n            ))}\n        </ol>\n    );\n};\nexport default ReviewsList;\n","import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { GetReviewsByID } from '../GetTrending'\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n    const [review, setReview] = useState([])\n    const { moviesID } = useParams()\n\n    useEffect(() => {\n        GetReviewsByID(moviesID).then(response => setReview(response.data.results))\n    }, [moviesID])\n\n    return (\n        review.length !== 0 ? <ReviewsList reviewsList={review} /> : <p>We don`t have any reviews for this movie</p>\n    )\n}\nexport default Reviews"],"names":["PATH","KEY","GetTranding","axios","response","console","error","GetSearchMovies","query","GetMovieByID","id","GetCastByID","GetReviewsByID","Author","styled","author","content","reviewsList","map","useState","review","setReview","moviesID","useParams","useEffect","then","data","results","length"],"sourceRoot":""}